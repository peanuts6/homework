package edu.ldcollege.mapping;

import edu.ldcollege.domain.LdHomeWork;
import java.util.List;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface LdHomeWorkMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table LdHomeWork
     *
     * @mbg.generated
     */
    @Insert({
        "insert into LdHomeWork (userId, ",
        "classId, lessionId, ",
        "homeworkFilePath, homeworkFileName, ",
        "createDate, correctFlag, ",
        "starCount, negativeCount, ",
        "BestFlag)",
        "values (#{userid,jdbcType=INTEGER}, ",
        "#{classid,jdbcType=INTEGER}, #{lessionid,jdbcType=INTEGER}, ",
        "#{homeworkfilepath,jdbcType=VARCHAR}, #{homeworkfilename,jdbcType=VARCHAR}, ",
        "#{createdate,jdbcType=TIMESTAMP}, #{correctflag,jdbcType=INTEGER}, ",
        "#{starcount,jdbcType=INTEGER}, #{negativecount,jdbcType=INTEGER}, ",
        "#{bestflag,jdbcType=TINYINT})"
    })
    int insert(LdHomeWork record);
    
    @Update({
        "update LdHomeWork set homeworkFilePath = #{homeworkfilepath,jdbcType=VARCHAR},",
        "homeworkFileName = #{homeworkfilename,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER} and userid= #{userid,jdbcType=INTEGER} "
    })
    int update(LdHomeWork record);
    
    @Select({
        "select * from LdHomeWork where id=#{id,jdbcType=INTEGER}"
    })
    LdHomeWork get(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table LdHomeWork
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, userId, classId, lessionId, homeworkFilePath, homeworkFileName, createDate, ",
        "correctFlag, starCount, negativeCount, BestFlag",
        "from LdHomeWork"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER),
        @Result(column="userId", property="userid", jdbcType=JdbcType.INTEGER),
        @Result(column="classId", property="classid", jdbcType=JdbcType.INTEGER),
        @Result(column="lessionId", property="lessionid", jdbcType=JdbcType.INTEGER),
        @Result(column="homeworkFilePath", property="homeworkfilepath", jdbcType=JdbcType.VARCHAR),
        @Result(column="homeworkFileName", property="homeworkfilename", jdbcType=JdbcType.VARCHAR),
        @Result(column="createDate", property="createdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="correctFlag", property="correctflag", jdbcType=JdbcType.INTEGER),
        @Result(column="starCount", property="starcount", jdbcType=JdbcType.INTEGER),
        @Result(column="negativeCount", property="negativecount", jdbcType=JdbcType.INTEGER),
        @Result(column="BestFlag", property="bestflag", jdbcType=JdbcType.TINYINT)
    })
    List<LdHomeWork> selectAll();

    @Select({
    	"select * from LdHomeWork where classid=#{classid,jdbcType=INTEGER}"
    })
	List<LdHomeWork> selectByClassId(Integer classid);
}